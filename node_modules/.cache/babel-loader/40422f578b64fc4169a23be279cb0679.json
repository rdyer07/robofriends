{"ast":null,"code":"var _jsxFileName = \"/Users/russelldyer/Desktop/Web Development/robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList.js';\nimport SearchBox from '../components/SearchBox.js';\nimport Scroll from '../components/Scroll.js';\nimport ErrorBoundary from '../components/ErrorBoundary.js';\nimport './App.css';\nimport { setSearchField } from '../actions';\nimport { requestRobots } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => requestRobots(dispatch)\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [] // searchfield: '' searchfield no longer required as props being passed through redux\n\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n      return response.json();\n    }).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n  } // onSearchChange = (event) => {\n  //     this.setState({ searchfield: event.target.value })\n  // } onSearchChange is being passed down as props through redux\n\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    if (robots === 0) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }\n      }, \"Loading\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"f1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, \"Robofriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n        searchChange: onSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Scroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardList, {\n        robots: filteredRobots,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/russelldyer/Desktop/Web Development/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","ErrorBoundary","setSearchField","requestRobots","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","constructor","componentDidMount","fetch","then","response","json","users","setState","render","props","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList.js';\nimport SearchBox from '../components/SearchBox.js';\nimport Scroll from '../components/Scroll.js';\nimport ErrorBoundary from '../components/ErrorBoundary.js';\nimport './App.css';\n\nimport {setSearchField} from '../actions';\nimport {requestRobots} from '../actions';\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchRobots.searchField,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        error: state.requestRobots.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestRobots: () => requestRobots(dispatch)\n    }   \n}\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            // searchfield: '' searchfield no longer required as props being passed through redux\n        }\n        \n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => {\n           return response.json();\n        })\n        .then(users => {\n            this.setState({ robots: users});\n        })\n        \n        \n    }\n// onSearchChange = (event) => {\n//     this.setState({ searchfield: event.target.value })\n    \n// } onSearchChange is being passed down as props through redux\n\n    render() {\n        const { robots } = this.state;\n        const { searchField, onSearchChange} = this.props;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\n        })\n        if (robots === 0) {\n            return <h1>Loading</h1>\n        } else {\n\n        return (\n        <div className='tc'>\n        <h1 className='f1'>Robofriends</h1>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n            <ErrorBoundary>\n            <CardList robots={filteredRobots}/>\n            </ErrorBoundary>\n        </Scroll>\n        </div>\n    )\n    }\n}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}